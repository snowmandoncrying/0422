<%@ page contentType = "text/html; charset=UTF-8" %>
<%@ page import = "web.bean.dao.BoardDAO" %>
<%@ page import = "web.bean.dto.BoardDTO" %>
<%@ page import = "java.util.List" %>
<%@ page import = "java.text.SimpleDateFormat" %>
<%@ include file="color.jsp"%>

<%
	int pageSize = 10;	// 페이지 사이즈: 한 페이지에 나타낼 글의 개수. 네이버 같은 경우 15개~20개로 설정되어있음
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm"); // 글 쓴 날짜(작성일자) - 년월일 시분까지만 표현하기위해 timestamp가 말고 따로 설정
    String pageNum = request.getParameter("pageNum");	// 리스트 하단에 있는 페이지번호 [1][2][3], 클릭시 전달받는 파라미터 - 같은 목록이지만 페이지번호는 다름
    // 페이지넘 파라미터
    if (pageNum == null) {	// 받은 파라미터가 null과 같을 때 (전달받은 파라미터가 없으면) 페이지 번호에 1을 대입해라
        pageNum = "1";		// 페이지 번호가 null이면 기본 1페이지를 보여줘라
    }
    
	// 계산하는 것 - 페이지마다 보여줄 글의 개수 (1페이지엔 1~10, 2페이지엔 11~20, 3페이지엔 21~30)
    int currentPage = Integer.parseInt(pageNum);	// 현재페이지 : 1, 2
    int startRow = (currentPage - 1) * pageSize + 1;	// 시작번호 : (1-1)*10+1 = 1 (1페이지 시작번호), (2-1)*10+1 = 11 (2페이지 시작번호)
    int endRow = currentPage * pageSize;	// 끝번호 : 1*10 = 10 (1페이지의 끝번호), 20 (2페이지의 끝번호) > 계산공식이라고 보면 됨. 변수 이름만 달라짐! 외워?!
	// 즉 1페이지에 1~10까지를 가져감, 2페이지는 11~20을 가져감
	
    int count = 0;	// 게시물의 수를 세기 위해 - 선언하고 0으로 초기화한 것
    List articleList = null;	// 게시물 목록을 저장할 리스트 - null로 초기화한 것
    BoardDAO dbPro = new BoardDAO();	// 유즈빈 액션태그 안 쓰고 그냥 자바코드로 dao 생성 > 데이터베이스와 상호작용하기 위함
    count = dbPro.getArticleCount();	// 전체 글 수, 컨트롤 누르고 마우스 대면 바로 이동할 수 있다 > 데이터베이스(dao)에서 글의 개수를 가져온것임
    	// dbPro 객체의 getArticleCount() 메서드를 호출하여 현재 게시물의 수를 가져와 count 변수에 할당, 데이터베이스에서 게시물의 총 수를 조회하는 역할
   	if (count > 0) {	// 0보다 크면 실행 - 게시물이 하나 이상 있는지 확인
        articleList = dbPro.getArticles(startRow, endRow);	// 글 목록을 대입받음
        // dbPro 객체의 getArticles() 메서드를 호출하여 지정된 범위 내의 게시물 목록을 가져와 articleList 변수에 할당
        // startRow와 endRow는 가져올 게시물의 범위를 지정하는 매개변수
        // 데이터베이스에서 해당 범위의 게시물을 조회하여 반환
    }

%>
<html>
<head>
<title>게시판</title>
<link href="style.css" rel="stylesheet" type="text/css">
</head>

<body bgcolor="<%=bodyback_c%>">
<center><b>글목록(전체 글:<%=count%>)</b>
	<table width="700">
		<tr>
			<td align="right" bgcolor="<%=value_c%>">
				<a href="writeForm.jsp">글쓰기</a>
			</td>
		</tr>
	</table>

<% if (count == 0) { %>	<!-- 처음 게시판 상태 -->
	<table width="700" border="1" cellpadding="0" cellspacing="0">
		<tr>
    		<td align="center">
    			게시판에 저장된 글이 없습니다.
    		</td>
    	</tr>
	</table>
<% } else {    %> <!-- 카운트가 0 이 아니면 폼을 만들어줌 -->
	<table border="1" width="700" cellpadding="0" cellspacing="0" align="center"> 
    	<tr height="30" bgcolor="<%=value_c%>"> 
      		<td align="center"  width="50"  >번 호</td> 
      		<td align="center"  width="250" >제   목</td> 
      		<td align="center"  width="100" >작성자</td>
      		<td align="center"  width="150" >작성일</td> 
      		<td align="center"  width="50" >조 회</td> 
      		<td align="center"  width="100" >IP</td>    
    	</tr>
<%  	
        for (int i = 0 ; i < articleList.size() ; i++) {	// 리스트의 사이즈 > 개수 (리스트 안에 dto를 넣었으니까 그걸 출력하는 코드임) 
        	// articleList에 있는 각각의 게시물을 하나씩 가져오기 위해 사용
        	BoardDTO article = (BoardDTO)articleList.get(i); // BoardDTO로 형변환하여 게시물 객체를 참조
        	// articleList에 있는 각각의 게시물을 처리하기 위해 반복문을 사용하고, 각 반복에서 현재 게시물을 BoardDTO 객체로 가져오는 것
        	// 게시물을 순회하고 각각의 게시물에 대해 필요한 작업을 수행 - for문 아래가 한번 반복할 때 다 실행되는 것임
%>
			<tr height="30">
	   			<td align="center"  width="50" > <%=article.getNum()%></td>
			<td  width="250" >
<%
			    int wid=0; 
			    if(article.getRe_level()>0){	// level 이 0보다 클 때 > 답변이라는 의미
					wid=20*(article.getRe_level());	// 변수 wid에 답변 단계(re_level)에 따라 적절한 너비를 할당, re_level이 1이면 답변의 첫 번째 단계, 2이면 두 번째 단계. 답변 단계에 따라 너비를 설정- 답변 단계가 높을수록 더 많은 공간을 차지
%>				 
				  <img src="images/level.gif" width="<%=wid%>" height="16">
				  <img src="images/re.gif">
<%		  		}else{ %>
				  <img src="images/level.gif" width="<%=wid%>" height="16">
<%		  		} %>
				  <a href="content.jsp?num=<%=article.getNum()%>&pageNum=<%=currentPage%>"> <!-- 글번호를 누르면 글번호가 content.jsp로 넘어감 -->
						<%=article.getSubject()%>	<!-- 글을 읽을 때 글번호와 페이지번호가 넘어가는 것임 -->
				  </a> 
				  <%if(article.getBoardfile() > 0){ %>
				  	<img src="images/pngwing.com.png" width="15">
				  <%}%>
<% 		  		if(article.getReadcount()>=20){%>	<!-- 인기글 - 조회수가 20 이상일 때 핫 아이콘을 붙여줘라 -->
		         	<img src="images/hot.gif" border="0"  height="16">
<%				} %> 
	        </td>
			<td align="center"  width="100"> 
				<a href="mailto:<%=article.getEmail()%>"><%=article.getWriter()%></a> <!-- 메일창이 넘어감 -->
			</td>
		    <td align="center"  width="150"><%= sdf.format(article.getReg_date())%></td>	<!-- 년월일 시분 까지만 -->
		    <td align="center"  width="50"><%=article.getReadcount()%></td>
		    <td align="center" width="100" ><%=article.getIp()%></td>
		</tr>
	<%}%>
</table>
<%}%>
<%
    if (count > 0) {	// 페이지 네비게이션 생성 - 이전 페이지로 이동하는 링크 처리
        int pageCount = count / pageSize + ( count % pageSize == 0 ? 0 : 1);	// 전체 페이지 수를 계산 - 전체 게시물 수를 페이지당 게시물 수로 나누고, 나머지가 있는 경우에는 한 페이지를 추가로 처리
        int startPage = (int)(currentPage/10)*10+1;	// 현재 페이지를 기준으로 시작하는 페이지 번호를 계산,  10개의 페이지를 한 번에 표시
		int pageBlock=10;	// 한 번에 표시할 페이지 블록의 크기
        int endPage = startPage + pageBlock-1;	// 표시될 페이지 블록의 끝 페이지 번호를 계산

		if (endPage > pageCount) endPage = pageCount; // 마지막 페이지 번호가 전체 페이지 수를 초과하지 않도록
        if (startPage > 10) {    %>	<!-- 시작 페이지가 10보다 큰 경우에만 이전 페이지로 이동 -->
        <a href="list.jsp?pageNum=<%= startPage - 10 %>">[이전]</a>	<!-- 글이 많을 때 이전, 다음이 뜸 -->
<%      }
        for (int i = startPage ; i <= endPage ; i++) {  %>
        <a href="list.jsp?pageNum=<%= i %>">[<%= i %>]</a>
<%
        }
        if (endPage < pageCount) {  %>
        <a href="list.jsp?pageNum=<%= startPage + 10 %>">[다음]</a>
<%
        }
    }
%>
</center>
</body>
</html>
